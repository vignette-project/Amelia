# Strip is split into two types: legacy and modern
# legacy strip is single-threaded and uses binutils's strip
# modern strip is multi-threaded and uses the custom-build freedesktop-sdk-stripper
# Both need to exist because the freedesktop-sdk-stripper is too heavy to be included in the bootstrap, yet
# the early build environment needs to be stripped too

# Legacy strip config
objcopy-link-args: --add-gnu-debuglink
objcopy-extract-args: --only-keep-debug --compress-debug-sections
strip-args: --remove-section=.comment --remove-section=.note --strip-unneeded
legacy-strip: |
  cd "%{install-root}" && find -type f \
    '(' -perm -111 -o -name '*.so*' \
        -o -name '*.cmxs' -o -name '*.node' ')' \
    -exec sh -ec \
    'read -n4 hdr <"$1" # check for elf header
     if [ "$hdr" != "$(printf \\x7fELF)" ]; then
         exit 0
     fi
     debugfile="%{install-root}%{debugdir}/$1"
     mkdir -p "$(dirname "$debugfile")"
     objcopy %{objcopy-extract-args} "$1" "$debugfile"
     chmod 644 "$debugfile"
     strip %{strip-args} "$1"
     objcopy %{objcopy-link-args} "$debugfile" "$1"' - {} ';'

# Modern strip config
optimize-debug: 'true'
compress-debug: 'true'
sourcedir: "%{debugdir}/source"
toolchain-prefixes: >-
  %{tools}
  /usr
  %{prefix}
modern-strip: |
  OPTS=()
  if ! "%{optimize-debug}"; then
    OPTS+=("-n")
  fi
  if ! "%{compress-debug}"; then
    OPTS+=("-p")
  fi
  for p in %{toolchain-prefixes}; do
    OPTS+=("-t" "${p}")
  done
  freedesktop-sdk-stripper \
    "${OPTS[@]}" \
    "%{build-root}" \
    "%{sourcedir}/%{element-name}" \
    "%{debugdir}/dwz/%{element-name}" \
    "%{debugdir}" \
    "%{install-root}"

# Choose b/t legacy and modern
strip-binaries: |
  if [ -x "$(command -v freedesktop-sdk-stripper)" ]; then
    %{modern-strip}
  else
    %{legacy-strip}
  fi
